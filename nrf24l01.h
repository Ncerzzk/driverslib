#ifndef NRF24L01
#define NRF24L01

#include "stdint.h"
#include "stddef.h"
#include "spi.h"
typedef enum{
  CSN,
  CE
}NRF_GPIO;

typedef enum{
  LOW=0,
  HIGH=1
}NRF_GPIO_Level;

typedef enum{
  NRF_RX_IT=1<<6,
  NRF_TX_IT=1<<5,
  NRF_MAX_IT=1<<4
}NRF_IT;

typedef void (*nrf_com_fptr)(uint8_t * txData,uint8_t * rxData,uint16_t len);
typedef void (*nrf_read_or_write_fptr)(uint8_t * Data,uint16_t len);
typedef void (*nrf_delay_ms_fptr)(uint32_t t);
typedef void (*nrf_set_gpio_fptr)(NRF_GPIO io,NRF_GPIO_Level level);
typedef void (*nrf_rx_analize_fptr)(uint8_t * data,uint16_t len);
 
typedef enum{
  NRF_TX=2,
  NRF_RX=3,
  NRF_WAIT=0
}NRF_Mode;

typedef struct {
  nrf_com_fptr spi_write_read;
  nrf_read_or_write_fptr spi_write;
  nrf_read_or_write_fptr spi_read;
  void * delay_ms;
  void *  delay_us;
  nrf_set_gpio_fptr set_gpio;
  nrf_rx_analize_fptr rx_analize;
  uint8_t * tx_data;
  uint16_t tx_len;
  uint8_t * rx_data;
  uint16_t rx_len;
  NRF_Mode mode;
}NRF_Dev;


#define R_REGISTER 0
#define W_REGISTER 0x20
#define R_RX_PL_WID  0x60
#define R_RX_PAYLOAD 0x61
#define W_TX_PAYLOAD 0xa0
#define FLUSH_TX 0xe1
#define FLUSH_RX 0xe2
#define REUSE_TX_PL 0xe3
#define NOP 0xff

#define TX_ADR_WIDTH    5    // ??°??€????o|
#define RX_ADR_WIDTH    5    // 
#define TX_PLOAD_WIDTH  10  //  ??‘é€???°???é???o|
#define RX_PLOAD_WIDTH  10   // ??￥??—??°???é???o|

#define NRF_CONFIG      0x00  // é…?????”???‘????€????CRC? ?éa??¨????
#define EN_AA           0x01  // è?a??¨?o”?-”???è??è?????
#define EN_RXADDR       0x02  // ??ˉ?”¨???é?“è?????
#define SETUP_AW        0x03  // ?”???‘??°??€????o|è?????
#define SETUP_RETR      0x04  // è?a??¨é????‘???è??è?????
#define RF_CH           0x05  // ?·￥???é￠‘???è?????
#define RF_SETUP        0x06  // ??‘?°?é€?????€????è€—???è??è?????
#define STATUS          0x07  // ????€??ˉ??-???¨

#define MAX_TX          0x10  //è????°????¤§??‘é€??????°??-?–?
#define TX_OK           0x20  //TX??‘é??????????-?–?
#define RX_OK           0x40  //??￥?”???°??°?????-?–?

#define OBSERVE_TX      0x08  // ??‘é????‘?μ????è??
#define CD              0x09  // ??°??€?￡??μ?
#define RX_ADDR_P0      0x0A  // é￠‘é?“0??￥?”???°?????°??€
#define RX_ADDR_P1      0x0B  // é￠‘é?“1??￥?”???°?????°??€
#define RX_ADDR_P2      0x0C  // é￠‘é?“2??￥?”???°?????°??€
#define RX_ADDR_P3      0x0D  // é￠‘é?“3??￥?”???°?????°??€
#define RX_ADDR_P4      0x0E  // é￠‘é?“4??￥?”???°?????°??€
#define RX_ADDR_P5      0x0F  // é￠‘é?“5??￥?”???°?????°??€
#define TX_ADDR         0x10  // ??‘é€???°??€
#define RX_PW_P0        0x11  // ??￥?”?é￠‘é?“0??￥?”???°???é???o|
#define RX_PW_P1        0x12  // ??￥?”?é￠‘é?“0??￥?”???°???é???o|
#define RX_PW_P2        0x13  // ??￥?”?é￠‘é?“0??￥?”???°???é???o|
#define RX_PW_P3        0x14  // ??￥?”?é￠‘é?“0??￥?”???°???é???o|
#define RX_PW_P4        0x15  // ??￥?”?é￠‘é?“0??￥?”???°???é???o|
#define RX_PW_P5        0x16  // ??￥?”?é￠‘é?“0??￥?”???°???é???o|
#define FIFO_STATUS     0x17  // FIFO? ??…￥? ???o????€??ˉ??-???¨è?????
uint8_t NRF_Init(SPI_HandleTypeDef * spi_port, uint8_t rx_channel_num,\
                  GPIO_TypeDef * csn_gpio_port,uint32_t csn_gpio_pin,\
                  GPIO_TypeDef * ce_gpio_port,uint32_t ce_gpio_pin);
void NRF_Send_Message();
void NRF_Receive();
uint8_t NRF_Set_Rx_Addr(uint8_t rx_addrs[][5],size_t size_check);
uint8_t NRF_Set_Tx_Addr(uint8_t * addr,size_t size_check);
void NRF_Install_TX_Data(uint8_t *data,int len);
void NRF_Read_Bytes(uint8_t addr,uint8_t *rx_data,uint8_t len);
void NRF_TX_IRQ_Handler();
void NRF_Send_Message_IT();
__weak void NRF_Receive_Callback(uint8_t * data,int len);
__weak void NRF_Send_Callback();
#endif